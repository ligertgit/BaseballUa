@using BaseballUa.ViewModels.Custom;
@model BaseballUa.ViewModels.Custom.EventGamesByDayVM

@{
    ViewData["Title"] = "Schedule";
}

<div class="container-fluid text-white eventhead">
    @await Html.PartialAsync("_EventDetails", new EventWithNewsAndMedia{ Event = Model.Event,
    Albums = Model.Albums,
    Videos = Model.Videos,
    Games = Model.CurrentGames,
    News = Model.News })
</div>

@if(Model != null && Model.Event != null && Model.GamesByDay != null && Model.GamesByDay.Count > 0)
{
    <div class="container-fluid text-white m-0 p-3">
        @*@await Html.PartialAsync("_DatesLinks", Model.GamesByDay.Select(gd => gd.GamesDate?.ToString("dd/MM")).ToList())*@
        <div class="flex-row">
            @foreach (var game in Model.GamesByDay)
            {
                @if(game.GamesDate != null)
                {
                    <a class="btn btn-primary @(@Model.GamesByDay?.IndexOf(game) == Model.ShowIndex ? "border border-2" : "")" asp-route-id="@Model.Event.EventViewModelId" asp-route-dateIndex="@Model.GamesByDay?.IndexOf(game)">
                        @game.GamesDate?.ToString("dd-MM")
                    </a>
                }
            }
        </div>
    </div>
}


@if (Model != null && Model.ShowIndex >= 0 && Model?.GamesByDay != null && Model.GamesByDay.Count > Model.ShowIndex)
{
    <div class="container-fluid text-white m-0 p-3">
        @foreach (var game in Model.GamesByDay[Model.ShowIndex].Games)
        {
            @await Html.PartialAsync("_GameWide", game)
        }
    </div>
}