@using BaseballUa.Data;
@model BaseballUa.ViewModels.NewsVM

@{
    ViewData["Title"] = "Add News";
}

<div class="container-fluid text-warning adminhead">
    <div class="mb-0 mt-2 mb-5 p-0">
        @await Html.PartialAsync("_AdminHead")
    </div>
</div>

<h1>Додати новину</h1>

<hr />
<strong><label>Новину треба показувати лише тим, для кого вона цікава.</label></strong>
<br />
Частіше за все новина має бути прив'язана до одного зі списків:
<label>вона чи глобальна -- побачуть ВСІ (не треба у більшості віпидків, наприклад, спамити софтболістів бейсбольними новинами)</label>
<label>стосується певного спорту (бейсбол чи софтбол). (але не треба у більшості віпидків, наприклад, спамити ю18 новинами з ю8)</label>
<label>стосується певного турніру. (але не треба, наприклад, спамити фотками лише вашої команди інщі команди)</label>
<label>стосується лише певної команди. (у кожного клубу своя політка щодо нових у їх стрічці, до того ж у команді можуть бути різні вікові групи)</label>
<br />
<br />
Інколи новину можно прив'язати до декількох списків: 
<label>Наприклад, перемогу у фінальній грі ЧУ софтбол ю18, логічно прив'язати до: турніру, софтболу, ю18, команди-переможниці</label>
<label>А, новину по певній грі у ЛЛ ю12 бейсбол, можна привєязати до: лише певної команди. Можливо, дивлячись на текст новини -- до турніру. Можливо, якщо це Европейский етап, то і до бейсболу і до ю12 взагалі. </label>
<br />
<br />
<label>До новини можно прив'язати альбоми. Але, майте на увазі, що, якщо у вас лише фотки, то має сенс створити не новину, а альбом, який можно так само прив'язувати по тим же правилам до тих самих категорій + окремо для певної гри (їх буде також цікаво подивитися батькам команди-суперника)</label>
<label>Те саме по відео</label>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="AddNews">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Новини у стрічці сортуються по датам. Можна указати дату у минулому. Якщо дата буде у майбутньому -- вона з'явиться у стрічках коли настане цей час'</label>
                <label asp-for="PublishDate" class="control-label"></label>
                <input asp-for="PublishDate" class="form-control" />
                <span asp-validation-for="PublishDate" class="text-danger"></span>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="SportType" class="control-label"></label>
                <label>Віберіть це, якщо ви вважаєте, що ВСІ люди ВСІХ вікових категорій, мають побачити цю новину, якщо вони слідкують за цим видом спорту</label>
                @Html.DropDownListFor(c => Model.SportType, Enums.SportType.NotDefined.ToSelectList(), optionLabel: "--- оберіть ---")
                @Html.ValidationMessageFor(c => c.SportType, "", new { @class = "text-danger" })
            </div>
            <hr />
            <div class="form-group form-check">
                <label>Оберіть це, якщо вважаєте, що ВСІ люди мають побачити новину</label>
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsGeneral" /> @Html.DisplayNameFor(model => model.IsGeneral)
                </label>
            </div>
            <hr />
            <div class="form-group">
                <label>Оберіть це, якщо новину мають побачити ВСІ, хто слідкує за турніром</label>
                <label asp-for="EventId" class="control-label"></label>
                @Html.DropDownListFor(c => Model.EventId, new SelectList(ViewBag.EventsSL, "Value", "Text"), optionLabel: "--- оберіть ---")
                @Html.ValidationMessageFor(c => c.EventId, "", new { @class = "text-danger" })
            </div>
            <hr />
            <div class="form-group">
                <label>Оберіть це, якщо новина стосується усіх, кому цікава ця вікова категорія, не має значення вид спорту, певна команда чи певний турнір турнір</label>
                <label asp-for="CategoryId" class="control-label"></label>
                @Html.DropDownListFor(c => Model.CategoryId, new SelectList(ViewBag.CategoriesSL, "Value", "Text"), optionLabel: "--- оберіть ---")
                @Html.ValidationMessageFor(c => c.CategoryId, "", new { @class = "text-danger" })
            </div>
            <hr />
            <div class="form-group">
                <label>Оберіть це, якщо новина стосується одної певної команди, при чому не має значення вікова категорія чи вид спорту</label>
                <label asp-for="TeamId" class="control-label"></label>
                @Html.DropDownListFor(c => Model.TeamId, new SelectList(ViewBag.TeamsSL, "Value", "Text"), optionLabel: "--- оберіть ---")
                @Html.ValidationMessageFor(c => c.TeamId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Додати" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

