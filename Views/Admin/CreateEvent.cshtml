@model BaseballUa.ViewModels.EventViewModel

@{
    ViewData["Title"] = "Create Tournament";
}

<h1>Створити новий турнір</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateEvent">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Year" class="control-label"></label>
                <input asp-for="Year" class="form-control" />
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>

            @Html.DropDownListFor(x => Model.TournamentId, new SelectList(Model.TournamentList, "Value", "Text"), optionLabel: "--- оберіть ---")
            @Html.ValidationMessageFor(x => x.TournamentId, "", new { @class = "text-danger" })

            <div class="form-group">
                <input type="submit" value="Створити" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ListEvents">Повернутися до списку</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
